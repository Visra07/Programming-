/*
Given 2 matrices, find the product.

Input Format

First line of input contains T - number of test cases. First line of each test case contains N1, M1 - size of the 1st matrix. Its followed by N1 lines each containing M1 intergers - elements of the 1st matrix. The next line contains N2, M2 - size of the 2nd matrix. Its followed by N2 lines each containing M2 intergers - elements of the 2nd matrix. Note that M1 = N2.

Constraints

1 <= T <= 100
1 <= N1,M1,N2,M2 <= 50
-100 <= mat[i][j] <= 100

Output Format

For each test case, print the resultant product matrix, separated by newline.

Sample Input 0

2
2 2
1 2 
3 -1 
2 3
1 -2 3 
2 3 -1 
2 3
27 29 53 
-28 49 -24 
3 4
23 52 -38 72 
-64 15 -59 -10 
-75 43 10 25 
Sample Output 0

5 4 1 
1 -9 10 
-5210 4118 -2207 2979 
-1980 -1753 -2067 -3106 
*/


//code

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    long casei,cases;
    scanf("%ld",&cases);
    for(casei=0;casei<cases;casei++)
    {
        long int rows,cols,row1,col1,row2,col2,k;
        scanf("%ld%ld",&row1,&col1);
        long int mat[row1][col1];
        for(rows=0;rows<row1;rows++)
        {
            for(cols=0;cols<col1;cols++)
            {
                scanf("%ld",&mat[rows][cols]);
            }
        }
        scanf("%ld%ld",&row2,&col2);
        long int mat1[row2][col2],mul[row1+row2][col1+col2];
        for(rows=0;rows<row2;rows++)
        {
            for(cols=0;cols<col2;cols++)
            {
                
                scanf("%ld",&mat1[rows][cols]);
            }
        }
        for(rows=0;rows<row2+row1;rows++)
        {
            for(cols=0;cols<col2+col1;cols++)
            {
                mul[rows][cols]=0;
            }
        }
        for(rows=0;rows<row1;rows++)
        {
            for(cols=0;cols<col2;cols++)
            {
                for(k=0;k<col1;k++)
                {
                    mul[rows][cols]+=mat[rows][k]*mat1[k][cols];
                }
            }
        }
        for(rows=0;rows<row1;rows++)
        {
            for(cols=0;cols<col2;cols++)
            {
                 printf("%ld ",mul[rows][cols]);
            }
            printf("\n");
        }
    }
    return 0;
}
